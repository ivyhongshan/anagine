{"version":3,"file":"connectedFilter-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;ACbA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAMA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAMA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AAIA;AACA;AAtEA;AAwEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://anagine/./src/components/ConnectedFilter/AccessibleFilter.jsx","webpack://anagine/./src/components/ConnectedFilter/UnaccessibleFilter.jsx","webpack://anagine/./stories/SwitchableFilterExample.jsx","webpack://anagine/"],"sourcesContent":["import ConnectedFilter from '.';\nimport { ENUM_ACCESSIBILITY } from '../Utils/const';\n\nclass AccessibleFilter extends ConnectedFilter {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      accessibility: ENUM_ACCESSIBILITY.ACCESSIBLE,\n    };\n  }\n}\n\nexport default AccessibleFilter;\n","import ConnectedFilter from '.';\nimport { ENUM_ACCESSIBILITY } from '../Utils/const';\n\nclass UnaccessibleFilter extends ConnectedFilter {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      accessibility: ENUM_ACCESSIBILITY.UNACCESSIBLE,\n    };\n  }\n}\n\nexport default UnaccessibleFilter;\n","import React from 'react';\nimport Dropdown from '@gen3/ui-component/dist/components/Dropdown';\nimport { filterConfig, guppyConfig, fieldMapping } from './conf';\n// import ConnectedFilter from '@gen3/guppy/dist/components/ConnectedFilter';\n// import AccessibleFilter from '@gen3/guppy/dist/components/ConnectedFilter/AccessibleFilter';\n// import UnaccessibleFilter from '@gen3/guppy/dist/components/ConnectedFilter/UnaccessibleFilter';\n// import GuppyWrapper from '@gen3/guppy/dist/components/GuppyWrapper';\nimport ConnectedFilter from '../src/components/ConnectedFilter';\nimport AccessibleFilter from '../src/components/ConnectedFilter/AccessibleFilter';\nimport UnaccessibleFilter from '../src/components/ConnectedFilter/UnaccessibleFilter';\nimport GuppyWrapper from '../src/components/GuppyWrapper';\n\nconst TotalCountWidget = props => (\n  <h4>\n      Total Count:\n    {props.totalCount}\n  </h4>\n);\n\nclass SwitchableFilterExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level: 'all-data',\n    };\n  }\n\n  changeLevel(level) {\n    this.setState({ level });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Dropdown>\n          <Dropdown.Button>\n            Access Level: \"{this.state.level}\"\n          </Dropdown.Button>\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => this.changeLevel('all-data')}>All Data</Dropdown.Item>\n            <Dropdown.Item onClick={() => this.changeLevel('accessible')}>Accessible</Dropdown.Item>\n            <Dropdown.Item onClick={() => this.changeLevel('unaccessible')}>Unaccessible</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {\n          this.state.level === 'all-data' && (\n            <div>\n              <GuppyWrapper\n                filterConfig={filterConfig}\n                guppyConfig={guppyConfig}\n                fieldMapping={fieldMapping}\n              >\n                <TotalCountWidget />\n                <ConnectedFilter />\n              </GuppyWrapper>\n            </div>\n          )\n        }\n        {\n          this.state.level === 'accessible' && (\n            <div>\n              <GuppyWrapper\n                filterConfig={filterConfig}\n                guppyConfig={guppyConfig}\n                fieldMapping={fieldMapping}\n              >\n                <TotalCountWidget />\n                <AccessibleFilter />\n              </GuppyWrapper>\n            </div>\n          )\n        }\n        {\n          this.state.level === 'unaccessible' && (\n            <div>\n              <GuppyWrapper\n                filterConfig={filterConfig}\n                guppyConfig={guppyConfig}\n                fieldMapping={fieldMapping}\n              >\n                <TotalCountWidget />\n                <UnaccessibleFilter />\n              </GuppyWrapper>\n            </div>\n          )\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SwitchableFilterExample;\n"],"names":[],"sourceRoot":""}