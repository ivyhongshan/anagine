"use strict";
self["webpackHotUpdateanagine"]("connectedFilter-stories",{

/***/ "./src/components/ConnectedFilter/index.jsx":
/*!**************************************************!*\
  !*** ./src/components/ConnectedFilter/index.jsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _gen3_ui_component_dist_components_filters_FilterGroup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @gen3/ui-component/dist/components/filters/FilterGroup */ "./node_modules/@gen3/ui-component/dist/components/filters/FilterGroup/index.js");
/* harmony import */ var _gen3_ui_component_dist_components_filters_FilterList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @gen3/ui-component/dist/components/filters/FilterList */ "./node_modules/@gen3/ui-component/dist/components/filters/FilterList/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ "./src/components/ConnectedFilter/utils.js");
/* harmony import */ var _Utils_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Utils/const */ "./src/components/Utils/const.js");
/* harmony import */ var _Utils_queries__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Utils/queries */ "./src/components/Utils/queries.js");
/* harmony import */ var _Utils_filters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Utils/filters */ "./src/components/Utils/filters.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function _toConsumableArray(r) {return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(r, a) {if (r) {if ("string" == typeof r) return _arrayLikeToArray(r, a);var t = {}.toString.call(r).slice(8, -1);return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;}}function _iterableToArray(r) {if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);}function _arrayWithoutHoles(r) {if (Array.isArray(r)) return _arrayLikeToArray(r);}function _arrayLikeToArray(r, a) {(null == a || a > r.length) && (a = r.length);for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];return n;}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(e, r, t) {return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e;}function _classCallCheck(a, n) {if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");}function _defineProperties(e, r) {for (var t = 0; t < r.length; t++) {var o = r[t];o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);}}function _createClass(e, r, t) {return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}function _callSuper(t, o, e) {return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));}function _possibleConstructorReturn(t, e) {if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t);}function _assertThisInitialized(e) {if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;}function _isNativeReflectConstruct() {try {var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));} catch (t) {}return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {return !!t;})();}function _getPrototypeOf(t) {return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {return t.__proto__ || Object.getPrototypeOf(t);}, _getPrototypeOf(t);}function _inherits(t, e) {if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e);}function _setPrototypeOf(t, e) {return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {return t.__proto__ = e, t;}, _setPrototypeOf(t, e);} /* eslint react/forbid-prop-types: 0 */








var

ConnectedFilter = /*#__PURE__*/function (_React$Component) {
  function ConnectedFilter(props) {var _this;_classCallCheck(this, ConnectedFilter);
    _this = _callSuper(this, ConnectedFilter, [props]);

    var filterConfigsFields = (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_6__.getAllFieldsFromFilterConfigs)(props.filterConfig.tabs);
    var filterConfigsRegularAggFields = filterConfigsFields.fields || [];
    var filterConfigsAsTextAggFields = filterConfigsFields.asTextAggFields || [];
    var allRegularAggFields = props.accessibleFieldCheckList ?
    lodash__WEBPACK_IMPORTED_MODULE_0___default().union(filterConfigsRegularAggFields, props.accessibleFieldCheckList) :
    filterConfigsRegularAggFields;
    // props.extraAggsFields are chart fields, use asTextAgg for all of them
    var allAsTextAggFields = lodash__WEBPACK_IMPORTED_MODULE_0___default().union(filterConfigsAsTextAggFields, _this.props.extraAggsFields);

    _this.initialTabsOptions = {};
    var initialFilter = _this.props.adminAppliedPreFilters;
    var filterStatusArray = [];
    var filtersApplied = {};
    if (_this.props.userFilterFromURL && Object.keys(_this.props.userFilterFromURL).length > 0) {
      filterStatusArray = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.buildFilterStatusForURLFilter)(
        _this.props.userFilterFromURL,
        _this.getTabsWithSearchFields()
      );
      filtersApplied = _this.props.userFilterFromURL;
      initialFilter = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.mergeFilters)(_this.props.userFilterFromURL, _this.props.adminAppliedPreFilters);
    }

    _this.state = {
      allRegularAggFields: allRegularAggFields,
      allAsTextAggFields: allAsTextAggFields,
      initialAggsData: {},
      receivedAggsData: {},
      accessibility: _Utils_const__WEBPACK_IMPORTED_MODULE_5__.ENUM_ACCESSIBILITY.ALL,
      adminAppliedPreFilters: _objectSpread({}, _this.props.adminAppliedPreFilters),
      filter: _objectSpread({}, initialFilter),
      filtersApplied: filtersApplied,
      filterStatusArray: filterStatusArray
    };
    _this.filterGroupRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createRef();
    _this.adminPreFiltersFrozen = JSON.stringify(_this.props.adminAppliedPreFilters).slice();
    _this.arrayFields = [];return _this;
  }_inherits(ConnectedFilter, _React$Component);return _createClass(ConnectedFilter, [{ key: "componentDidMount", value:

    function componentDidMount() {var _this2 = this;
      if (this.props.onUpdateAccessLevel) {
        this.props.onUpdateAccessLevel(this.state.accessibility);
      }
      if (this.props.onFilterChange) {
        this.props.onFilterChange(this.state.adminAppliedPreFilters, this.state.accessibility);
      }
      (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_6__.askGuppyForAggregationData)(
        this.props.guppyConfig.path,
        this.props.guppyConfig.type,
        this.state.allRegularAggFields,
        this.state.allAsTextAggFields,
        this.state.filter,
        this.state.accessibility,
        this.props.csrfToken
      ).
      then(function (res) {
        if (!res.data) {
          var msg = "error querying guppy".concat(res.errors && res.errors.length > 0 ? ": ".concat(res.errors[0].message) : '');
          console.error(msg); // eslint-disable-line no-console
        }
        _this2.handleReceiveNewAggsData(
          res.data._aggregation[_this2.props.guppyConfig.type],
          _this2.state.adminAppliedPreFilters
        );
        _this2.saveInitialAggsData(res.data._aggregation[_this2.props.guppyConfig.type]);
      });

      (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_6__.askGuppyAboutArrayTypes)(this.props.guppyConfig.path).then(function (res) {
        _this2.arrayFields = [];
        var keys = Object.keys(res);

        for (var i = 0; i < keys.length; i += 1) {
          if (res[keys[i]].arrayFields && res[keys[i]].arrayFields.length > 0) {
            _this2.arrayFields = _this2.arrayFields.concat(res[keys[i]].arrayFields);
          }
        }
      });
    } }, { key: "handleReceiveNewAggsData", value:

    function handleReceiveNewAggsData(receivedAggsData, filterResults) {
      this.setState({ receivedAggsData: receivedAggsData });
      if (this.props.onReceiveNewAggsData) {
        var resultAggsData = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.excludeSelfFilterFromAggsData)(receivedAggsData, filterResults);
        this.props.onReceiveNewAggsData(resultAggsData);
      }
    }

    /**
     * Handler function that is called every time filter changes
     * What this function does:
     * 1. Ask guppy for aggregation data using (processed) filter
     * 2. After get aggregation response, call `handleReceiveNewAggsData` handler
     *    to process new received agg data
     * 3. If there's `onFilterChange` callback function from parent, call it
     * @param {object} filterResults
     */ }, { key: "handleFilterChange", value:
    function handleFilterChange(filterResults) {var _this3 = this;
      this.setState({ adminAppliedPreFilters: JSON.parse(this.adminPreFiltersFrozen) });
      var mergedFilterResults = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.mergeFilters)(filterResults, JSON.parse(this.adminPreFiltersFrozen));

      var newFilterStatusArray = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.buildFilterStatusForURLFilter)(
        mergedFilterResults,
        this.getTabsWithSearchFields()
      );

      this.setState({ filtersApplied: mergedFilterResults, filterStatusArray: newFilterStatusArray });
      (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_6__.askGuppyForAggregationData)(
        this.props.guppyConfig.path,
        this.props.guppyConfig.type,
        this.state.allRegularAggFields,
        this.state.allAsTextAggFields,
        mergedFilterResults,
        this.state.accessibility,
        this.props.csrfToken
      ).
      then(function (res) {
        _this3.handleReceiveNewAggsData(
          res.data._aggregation[_this3.props.guppyConfig.type],
          mergedFilterResults
        );
      });

      if (this.props.onFilterChange) {
        this.props.onFilterChange(mergedFilterResults, this.state.accessibility);
      }
    } }, { key: "getTabsWithSearchFields", value:

    function getTabsWithSearchFields() {
      var newTabs = this.props.filterConfig.tabs.map(function (_ref)

      {var title = _ref.title,fields = _ref.fields,searchFields = _ref.searchFields,_ref$asTextAggFields = _ref.asTextAggFields,asTextAggFields = _ref$asTextAggFields === void 0 ? [] : _ref$asTextAggFields;
        if (searchFields) {
          return { title: title, fields: searchFields.concat(fields).concat(asTextAggFields) };
        }
        return { title: title, fields: fields.concat(asTextAggFields) };
      });
      return newTabs;
    }

    // eslint-disable-next-line react/no-unused-class-component-methods
  }, { key: "setFilter", value: function setFilter(filter) {
      if (this.filterGroupRef.current) {
        this.filterGroupRef.current.resetFilter();
      }
      this.handleFilterChange(filter);
    }

    /**
     * This function contains partial rendering logic for filter components.
     * It transfers aggregation data (`this.state.receivedAggsData`) to items inside filters.
     * But before that, the function first calls `this.props.onProcessFilterAggsData`, which is
     * a callback function passed by `ConnectedFilter`'s parent component, so that the parent
     * component could do some pre-processing modification about filter.
     */ }, { key: "getFilterTabs", value:
    function getFilterTabs() {var _this4 = this;
      var filtersToDisplay = this.state.filtersApplied;
      if (this.props.hidden) return null;
      var processedTabsOptions = this.props.onProcessFilterAggsData(this.state.receivedAggsData);

      // Get filter values
      var allFilterValues = this.props.filterConfig.tabs.reduce(
        function (accumulator, tab) {return [].concat(_toConsumableArray(accumulator), _toConsumableArray(tab.fields), _toConsumableArray(tab.asTextAggFields || []));},
        []
      );

      if (Object.keys(this.initialTabsOptions).length === 0) {
        this.initialTabsOptions = processedTabsOptions;
      }

      processedTabsOptions = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.updateCountsInInitialTabsOptions)(
        this.initialTabsOptions,
        processedTabsOptions,
        filtersToDisplay,
        // for tiered access filters
        this.props.tierAccessLimit ? this.props.accessibleFieldCheckList : [],
        allFilterValues
      );

      if (Object.keys(filtersToDisplay).length) {
        // if has applied filters, sort tab options as selected/unselected separately
        var selectedTabsOptions = {};
        var unselectedTabsOptions = {};
        Object.keys(processedTabsOptions).forEach(function (opt) {
          if (!processedTabsOptions["".concat(opt)].histogram.length) {
            if (!unselectedTabsOptions["".concat(opt)]) {
              unselectedTabsOptions["".concat(opt)] = {};
            }
            unselectedTabsOptions["".concat(opt)].histogram = [];
            return;
          }
          processedTabsOptions["".concat(opt)].histogram.forEach(function (entry) {
            if (filtersToDisplay["".concat(opt)] &&
            filtersToDisplay["".concat(opt)].selectedValues &&
            filtersToDisplay["".concat(opt)].selectedValues.includes(entry.key)) {
              if (!selectedTabsOptions["".concat(opt)]) {
                selectedTabsOptions["".concat(opt)] = {};
              }
              if (!selectedTabsOptions["".concat(opt)].histogram) {
                selectedTabsOptions["".concat(opt)].histogram = [];
              }
              selectedTabsOptions["".concat(opt)].histogram.push({ key: entry.key, count: entry.count });
            } else {
              if (!unselectedTabsOptions["".concat(opt)]) {
                unselectedTabsOptions["".concat(opt)] = {};
              }
              if (typeof entry.key !== 'string') {// if it is a range filter, just copy and return
                unselectedTabsOptions["".concat(opt)].histogram = processedTabsOptions["".concat(opt)].histogram;
                return;
              }
              if (!unselectedTabsOptions["".concat(opt)].histogram) {
                unselectedTabsOptions["".concat(opt)].histogram = [];
              }
              unselectedTabsOptions["".concat(opt)].histogram.push({ key: entry.key, count: entry.count });
            }
          });
        });

        // For search filters: If there are any search filters present, include
        // the selected options in the `selectedTabsOptions` array.
        // ------
        var allSearchFields = [];
        this.props.filterConfig.tabs.forEach(function (tab) {
          allSearchFields = allSearchFields.concat(tab.searchFields);
        });
        allSearchFields.forEach(function (field) {
          if (filtersToDisplay["".concat(field)]) {
            var selectedValues = filtersToDisplay["".concat(field)].selectedValues;
            if (selectedValues) {
              filtersToDisplay["".concat(field)].selectedValues.forEach(function (val) {
                if (!selectedTabsOptions["".concat(field)]) {
                  selectedTabsOptions["".concat(field)] = {};
                }
                if (!selectedTabsOptions["".concat(field)].histogram) {
                  selectedTabsOptions["".concat(field)].histogram = [];
                }
                selectedTabsOptions["".concat(field)].histogram.push({ key: val });
              });
            }
          }
        });
        // -------
        processedTabsOptions = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.mergeTabOptions)(
          (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.sortTabsOptions)(selectedTabsOptions),
          (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.sortTabsOptions)(unselectedTabsOptions)
        );
      } else {
        processedTabsOptions = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_7__.sortTabsOptions)(processedTabsOptions);
      }
      if (!processedTabsOptions || Object.keys(processedTabsOptions).length === 0) return null;
      var fieldMapping = this.props.fieldMapping;
      var tabs = this.props.filterConfig.tabs.map(function (_ref2, index) {var fields = _ref2.fields,searchFields = _ref2.searchFields,_ref2$asTextAggFields = _ref2.asTextAggFields,asTextAggFields = _ref2$asTextAggFields === void 0 ? [] : _ref2$asTextAggFields;
        var aggFields = lodash__WEBPACK_IMPORTED_MODULE_0___default().union(fields, asTextAggFields);
        var sections = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getFilterSections)(
          aggFields,
          searchFields,
          fieldMapping,
          processedTabsOptions,
          _this4.state.initialAggsData,
          _this4.state.adminAppliedPreFilters,
          _this4.props.guppyConfig,
          _this4.arrayFields,
          _this4.props.filterValuesToHide,
          _this4.props.csrfToken
        );
        var filterStatus = _this4.state.filterStatusArray ?
        _this4.state.filterStatusArray[index] : null;
        return (/*#__PURE__*/
          (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_gen3_ui_component_dist_components_filters_FilterList__WEBPACK_IMPORTED_MODULE_3__["default"], {

            sections: sections,
            hideEmptyFilterSection: _this4.props.hideEmptyFilterSection,
            tierAccessLimit: _this4.props.tierAccessLimit,
            lockedTooltipMessage: _this4.props.lockedTooltipMessage,
            disabledTooltipMessage: _this4.props.disabledTooltipMessage,
            arrayFields: _this4.arrayFields,
            filterStatusFromParent: filterStatus }, index
          ));

      });
      return tabs;
    }

    /**
     * Save initial aggregation data, especially for range slider
     * so that we still have min/max values for range slider
     * @param {object} aggsData
     */ }, { key: "saveInitialAggsData", value:
    function saveInitialAggsData(aggsData) {
      this.setState({ initialAggsData: aggsData });
    } }, { key: "render", value:

    function render() {var _this5 = this;
      if (this.props.hidden) return null;
      var filterTabs = this.getFilterTabs();
      if (!filterTabs || filterTabs.length === 0) {
        return null;
      }
      // If there are any search fields, insert them at the top of each tab's fields.
      var filterConfig = {
        tabs: this.getTabsWithSearchFields()
      };
      return (/*#__PURE__*/
        (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_gen3_ui_component_dist_components_filters_FilterGroup__WEBPACK_IMPORTED_MODULE_2__["default"], {
          ref: this.filterGroupRef,
          className: this.props.className,
          tabs: filterTabs,
          filterConfig: filterConfig,
          onFilterChange: function onFilterChange(e) {return _this5.handleFilterChange(e);},
          hideZero: this.props.hideZero,
          filterStatusFromParent: this.state.filterStatusArray,
          filterResultsFromParent: this.state.filtersApplied }
        ));

    } }]);}(react__WEBPACK_IMPORTED_MODULE_1__.Component);ConnectedFilter.displayName = "ConnectedFilter";


ConnectedFilter.propTypes = {
  filterConfig: prop_types__WEBPACK_IMPORTED_MODULE_9___default().shape({
    tabs: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_9___default().shape({
      title: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
      fields: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)),
      asTextAggFields: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)),
      searchFields: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string))
    }))
  }).isRequired,
  extraAggsFields: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)),
  guppyConfig: prop_types__WEBPACK_IMPORTED_MODULE_9___default().shape({
    path: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string).isRequired,
    type: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string).isRequired
  }).isRequired,
  onFilterChange: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),
  onReceiveNewAggsData: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
  fieldMapping: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_9___default().shape({
    field: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
    name: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)
  })),
  tierAccessLimit: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().number),
  onProcessFilterAggsData: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),
  onUpdateAccessLevel: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().func),
  adminAppliedPreFilters: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object),
  lockedTooltipMessage: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
  disabledTooltipMessage: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
  accessibleFieldCheckList: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)),
  hideZero: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
  hidden: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
  userFilterFromURL: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object),
  hideEmptyFilterSection: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
  filterValuesToHide: prop_types__WEBPACK_IMPORTED_MODULE_9___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)),
  csrfToken: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)
};

ConnectedFilter.defaultProps = {
  extraAggsFields: [],
  onFilterChange: function onFilterChange() {},
  onReceiveNewAggsData: function onReceiveNewAggsData() {},
  className: '',
  fieldMapping: [],
  tierAccessLimit: undefined,
  onProcessFilterAggsData: function onProcessFilterAggsData(data) {return data;},
  onUpdateAccessLevel: function onUpdateAccessLevel() {},
  adminAppliedPreFilters: {},
  lockedTooltipMessage: '',
  disabledTooltipMessage: '',
  accessibleFieldCheckList: undefined,
  hideZero: false,
  hidden: false,
  userFilterFromURL: {},
  hideEmptyFilterSection: false,
  filterValuesToHide: [],
  csrfToken: ''
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ConnectedFilter);

/***/ }),

/***/ "./src/components/ConnectedFilter/utils.js":
/*!*************************************************!*\
  !*** ./src/components/ConnectedFilter/utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkIsArrayField: () => (/* binding */ checkIsArrayField),
/* harmony export */   excludeSelfFilterFromAggsData: () => (/* binding */ excludeSelfFilterFromAggsData),
/* harmony export */   getFilterSections: () => (/* binding */ getFilterSections)
/* harmony export */ });
/* harmony import */ var flat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! flat */ "./node_modules/flat/index.js");
/* harmony import */ var flat__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(flat__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Utils_queries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils/queries */ "./src/components/Utils/queries.js");
function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(e, r, t) {return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}


var getSingleFilterOption = function getSingleFilterOption(histogramResult, initHistogramRes, filterValuesToHide) {
  if (!histogramResult || !histogramResult.histogram) {
    throw new Error("Error parsing field options ".concat(JSON.stringify(histogramResult)));
  }
  // if this is for range slider
  if (histogramResult.histogram.length === 1 && typeof histogramResult.histogram[0].key !== 'string') {
    var rangeOptions = histogramResult.histogram.map(function (item) {
      var minValue = initHistogramRes ? initHistogramRes.histogram[0].key[0] : item.key[0];
      var maxValue = initHistogramRes ? initHistogramRes.histogram[0].key[1] : item.key[1];
      return {
        filterType: 'range',
        min: Math.floor(minValue),
        max: Math.ceil(maxValue),
        lowerBound: item.key[0],
        upperBound: item.key[1],
        count: item.count
      };
    });
    return rangeOptions;
  }
  var rawTextOptions = histogramResult.histogram;
  // hide filterValuesToHide from filters
  // filterValuesToHide added to guppyConfig in data-portal
  if (filterValuesToHide.length > 0) {
    rawTextOptions = histogramResult.histogram.
    filter(function (item) {return filterValuesToHide.indexOf(item.key) < 0;});
  }
  var textOptions = rawTextOptions.map(function (item) {return {
      text: item.key,
      filterType: 'singleSelect',
      count: item.count,
      accessible: item.accessible
    };});
  return textOptions;
};

var capitalizeFirstLetter = function capitalizeFirstLetter(str) {
  var res = str.replace(/_|\./gi, ' ');
  return res.replace(/\w\S*/g, function (txt) {return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
};

// createSearchFilterLoadOptionsFn creates a handler function that loads the search filter's
// autosuggest options as the user types in the search filter.
var createSearchFilterLoadOptionsFn = function createSearchFilterLoadOptionsFn(field, guppyConfig) {return function (searchString, offset) {
    var NUM_SEARCH_OPTIONS = 20;
    return new Promise(function (resolve, reject) {
      // If searchString is empty return just the first NUM_SEARCH_OPTIONS options.
      // This allows the client to show default options in the search filter before
      // the user has started searching.
      var filter = {};
      if (searchString) {
        filter = {
          search: {
            keyword: searchString,
            fields: [field]
          }
        };
      }
      (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.queryGuppyForRawDataAndTotalCounts)(
        guppyConfig.path,
        guppyConfig.type,
        [field],
        filter,
        undefined,
        undefined,
        offset,
        NUM_SEARCH_OPTIONS,
        'accessible'
      ).
      then(function (res) {
        if (!res.data || !res.data[guppyConfig.type]) {
          resolve({
            options: [],
            hasMore: false
          });
        } else {
          var results = res.data[guppyConfig.type];
          var totalCount = res.data._aggregation[guppyConfig.type]._totalCount;
          resolve({
            options: results.map(function (result) {return { value: result[field], label: result[field] };}),
            hasMore: totalCount > offset + results.length
          });
        }
      })["catch"](function (err) {
        reject(err);
      });
    });
  };};

var checkIsArrayField = function checkIsArrayField(field, arrayFields) {
  var isArrayField = false;
  var keys = Object.keys(arrayFields);
  for (var i = 0; i < keys.length; i += 1) {
    if (arrayFields[keys[i]].includes(field)) {
      isArrayField = true;
    }
  }
  return isArrayField;
};

var getFilterSections = function getFilterSections(
aggFields,
searchFields,
fieldMapping,
tabsOptions,
initialTabsOptions,
adminAppliedPreFilters,
guppyConfig,
arrayFields,
filterValuesToHide,
csrfToken)
{
  var searchFieldSections = [];

  if (searchFields) {
    // Process searchFields first -- searchFields are special filters that allow the user
    // to search over all options, instead of displaying all options in a list. This allows
    // guppy/portal to support filters that have too many options to be displayed in a list.
    searchFieldSections = searchFields.map(function (field) {
      var overrideName = fieldMapping.find(function (entry) {return entry.field === field;});
      var label = overrideName ? overrideName.name : capitalizeFirstLetter(field);

      var tabsOptionsFiltered = _objectSpread({}, tabsOptions[field]);
      if (Object.keys(adminAppliedPreFilters).includes(field)) {
        tabsOptionsFiltered.histogram = tabsOptionsFiltered.histogram.filter(
          function (x) {return adminAppliedPreFilters[field].selectedValues.includes(x.key);}
        );
      }

      // For searchFields, don't pass all options to the component, only the selected ones.
      // This allows selected options to appear below the search box once they are selected.
      var selectedOptions = [];
      if (tabsOptionsFiltered && tabsOptionsFiltered.histogram) {
        selectedOptions = getSingleFilterOption(
          tabsOptionsFiltered,
          initialTabsOptions ? initialTabsOptions[field] : undefined,
          filterValuesToHide
        );
      }

      return {
        title: label,
        options: selectedOptions,
        isSearchFilter: true,
        onSearchFilterLoadOptions: createSearchFilterLoadOptionsFn(field, guppyConfig, csrfToken)
      };
    });
  }

  var sections = aggFields.map(function (field) {
    var overrideName = fieldMapping.find(function (entry) {return entry.field === field;});
    var label = overrideName ? overrideName.name : capitalizeFirstLetter(field);

    var tabsOptionsFiltered = _objectSpread({}, tabsOptions[field]);
    if (Object.keys(adminAppliedPreFilters).includes(field)) {
      tabsOptionsFiltered.histogram = tabsOptionsFiltered.histogram.filter(
        function (x) {return adminAppliedPreFilters[field].selectedValues.includes(x.key);}
      );
    }

    var defaultOptions = getSingleFilterOption(
      tabsOptionsFiltered,
      initialTabsOptions ? initialTabsOptions[field] : undefined,
      filterValuesToHide
    );

    var fieldIsArrayField = checkIsArrayField(field, arrayFields);

    return {
      title: label,
      options: defaultOptions,
      isArrayField: fieldIsArrayField
    };
  });
  return searchFieldSections.concat(sections);
};

var excludeSelfFilterFromAggsData = function excludeSelfFilterFromAggsData(receivedAggsData, filterResults) {
  if (!filterResults) return receivedAggsData;
  var resultAggsData = {};
  var flattenAggsData = flat__WEBPACK_IMPORTED_MODULE_0___default()(receivedAggsData, { safe: true });
  Object.keys(flattenAggsData).forEach(function (field) {
    var actualFieldName = field.replace('.histogram', '').replace('.asTextHistogram', '');
    var histogram = flattenAggsData["".concat(field)];
    if (!histogram) return;
    if (actualFieldName in filterResults) {
      var resultHistogram = [];
      if (typeof filterResults["".concat(actualFieldName)].selectedValues !== 'undefined') {
        var selectedValues = filterResults["".concat(actualFieldName)].selectedValues;
        resultHistogram = histogram.filter(function (bucket) {return selectedValues.includes(bucket.key);});
      }
      resultAggsData["".concat(actualFieldName)] = { histogram: resultHistogram };
    } else {
      resultAggsData["".concat(actualFieldName)] = { histogram: flattenAggsData["".concat(field)] };
    }
  });
  return resultAggsData;
};

/***/ }),

/***/ "./src/components/GuppyWrapper/index.jsx":
/*!***********************************************!*\
  !*** ./src/components/GuppyWrapper/index.jsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _Utils_queries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils/queries */ "./src/components/Utils/queries.js");
/* harmony import */ var _Utils_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utils/const */ "./src/components/Utils/const.js");
/* harmony import */ var _Utils_filters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Utils/filters */ "./src/components/Utils/filters.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(e, r, t) {return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e;}function _classCallCheck(a, n) {if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");}function _defineProperties(e, r) {for (var t = 0; t < r.length; t++) {var o = r[t];o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);}}function _createClass(e, r, t) {return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}function _callSuper(t, o, e) {return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));}function _possibleConstructorReturn(t, e) {if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t);}function _assertThisInitialized(e) {if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;}function _isNativeReflectConstruct() {try {var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));} catch (t) {}return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {return !!t;})();}function _getPrototypeOf(t) {return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {return t.__proto__ || Object.getPrototypeOf(t);}, _getPrototypeOf(t);}function _inherits(t, e) {if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e);}function _setPrototypeOf(t, e) {return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {return t.__proto__ = e, t;}, _setPrototypeOf(t, e);} /* eslint-disable react/jsx-fragments */
/* eslint react/forbid-prop-types: 0 */






/**
 * Wrapper that connects to Guppy server,
 * and pass filter, aggs, and data to children components
 * Input props:
 *   - filterConfig: configuration for ConnectedFilter component
 *   - guppyConfig: Guppy server config
 *   - onFilterChange: callback that takes filter as argument, will be
 * called every time filter changes
 *   - onReceiveNewAggsData: callback that takes aggregation results
 * as argument, will be called every time aggregation results updated
 *
 * This wrapper will pass following data (filters, aggs, configs) to children components via prop:
 *   - aggsData: the aggregation results, format:
 *         {
 *             // for text aggregation
 *            [field]: { histogram: [{key: 'v1', count: 42}, {key: 'v2', count: 19}, ...] },
 *             // for numeric aggregation
 *            [field]: { histogram: [{key: [1, 83], count: 100}] },
 *            ...
 *         }
 *   - filter: the filters, format:
 *         {
 *            [field]: { selectedValues: ['v1', 'v2', ...] },  // for text filter
 *            [field]: { upperBound: 1, lowerBound: 83 },  // for range filter
 *            ...
 *         }
 *   - filterConfig: configuration for ConnectedFilter component
 *   - rawData: raw data records filtered (with offset, size, and sort applied)
 *   - totalCount: total count of raw data records
 *
 */var
GuppyWrapper = /*#__PURE__*/function (_React$Component) {
  function GuppyWrapper(props) {var _this;_classCallCheck(this, GuppyWrapper);
    _this = _callSuper(this, GuppyWrapper, [props]);
    var initialFilter = _this.props.adminAppliedPreFilters;
    if (Object.keys(_this.props.initialFilterFromURL).length > 0) {
      initialFilter = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_3__.mergeFilters)(
        _this.props.initialFilterFromURL,
        _this.props.adminAppliedPreFilters
      );
    }
    // to avoid asynchronizations, we store another filter as private var
    _this.filter = _objectSpread({}, initialFilter);
    _this.adminPreFiltersFrozen = JSON.stringify(_this.props.adminAppliedPreFilters).slice();
    _this.state = {
      gettingDataFromGuppy: false,
      aggsData: {},
      filter: _objectSpread({}, initialFilter),
      rawData: [],
      totalCount: 0,
      allRegularAggFields: [],
      allAsTextAggFields: [],
      rawDataFields: [],
      accessibleFieldObject: undefined,
      unaccessibleFieldObject: undefined,
      accessibility: _Utils_const__WEBPACK_IMPORTED_MODULE_2__.ENUM_ACCESSIBILITY.ALL,
      adminAppliedPreFilters: _objectSpread({}, _this.props.adminAppliedPreFilters),
      userFilterFromURL: _objectSpread({}, _this.props.initialFilterFromURL)
    };return _this;
  }_inherits(GuppyWrapper, _React$Component);return _createClass(GuppyWrapper, [{ key: "componentDidMount", value:

    function componentDidMount() {var _this2 = this;
      (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.getAllFieldsFromGuppy)(
        this.props.guppyConfig.path,
        this.props.guppyConfig.type,
        this.props.csrfToken
      ).then(function (fields) {
        var rawDataFields = _this2.props.rawDataFields && _this2.props.rawDataFields.length > 0 ?
        _this2.props.rawDataFields : fields;
        _this2.setState({
          allRegularAggFields: fields,
          rawDataFields: rawDataFields
        }, function () {
          _this2.getDataFromGuppy(_this2.state.rawDataFields, undefined, true);
        });
      });
      if (typeof this.props.accessibleFieldCheckList !== 'undefined') {
        (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.getAccessibleResources)(
          this.props.guppyConfig.path,
          this.props.guppyConfig.type,
          this.props.accessibleFieldCheckList,
          this.props.csrfToken
        ).then(function (_ref) {var accessibleFieldObject = _ref.accessibleFieldObject,unaccessibleFieldObject = _ref.unaccessibleFieldObject;
          _this2.setState({
            accessibleFieldObject: accessibleFieldObject,
            unaccessibleFieldObject: unaccessibleFieldObject
          });
        });
      }
    } }, { key: "handleReceiveNewAggsData", value:

    function handleReceiveNewAggsData(aggsData) {
      if (this.props.onReceiveNewAggsData) {
        this.props.onReceiveNewAggsData(aggsData, this.filter);
      }
      this.setState({ aggsData: aggsData });
    } }, { key: "handleFilterChange", value:

    function handleFilterChange(userFilterFromUserInput, accessibility) {var _this3 = this;
      var userFilter = userFilterFromUserInput;

      // Apply user filters from URL on page load. Empty out state to avoid reapplying used filters.
      if (Object.keys(userFilter).length === 0 &&
      Object.keys(this.state.userFilterFromURL).length > 0) {
        userFilter = JSON.parse(JSON.stringify(this.state.userFilterFromURL));
        this.setState({ userFilterFromURL: {} });
      }

      this.setState({ adminAppliedPreFilters: JSON.parse(this.adminPreFiltersFrozen) });
      var filter = _objectSpread({}, userFilter);
      if (Object.keys(this.state.adminAppliedPreFilters).length > 0) {
        filter = (0,_Utils_filters__WEBPACK_IMPORTED_MODULE_3__.mergeFilters)(userFilter, this.state.adminAppliedPreFilters);
      }
      if (this.props.onFilterChange) {
        this.props.onFilterChange(filter);
      }
      this.filter = filter;
      this.setState({
        filter: filter,
        accessibility: accessibility
      }, function () {
        _this3.getDataFromGuppy(_this3.state.rawDataFields, undefined, true);
      });
    }

    /**
     * Fetch data from Guppy server.
     * This function will update this.state.rawData and this.state.totalCount
     */ }, { key: "handleFetchAndUpdateRawData", value:
    function handleFetchAndUpdateRawData(_ref2) {var _ref2$offset = _ref2.offset,offset = _ref2$offset === void 0 ? 0 : _ref2$offset,_ref2$size = _ref2.size,size = _ref2$size === void 0 ? 20 : _ref2$size,_ref2$sort = _ref2.sort,sort = _ref2$sort === void 0 ? [] : _ref2$sort;
      return this.getDataFromGuppy(this.state.rawDataFields, sort, true, offset, size);
    }

    /**
     * Download all data from Guppy server and return raw data
     * This function uses current filter argument
     */ }, { key: "handleDownloadRawData", value:
    function handleDownloadRawData(_ref3) {var sort = _ref3.sort,format = _ref3.format;
      // error handling for misconfigured format types
      if (format && !(format.toUpperCase() in _Utils_const__WEBPACK_IMPORTED_MODULE_2__.FILE_FORMATS)) {
        // eslint-disable-next-line no-console
        console.error("Invalid value ".concat(format, " found for arg format!"));
      }
      return (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.downloadDataFromGuppy)(
        this.props.guppyConfig.path,
        this.props.guppyConfig.type,
        this.state.totalCount,
        {
          fields: this.state.rawDataFields,
          sort: sort || [],
          filter: this.state.filter,
          accessibility: this.state.accessibility,
          format: format
        },
        this.props.csrfToken
      );
    }

    /**
     * Download all data from Guppy server and return raw data
     * For only given fields
     * This function uses current filter argument
     */ }, { key: "handleDownloadRawDataByFields", value:
    function handleDownloadRawDataByFields(_ref4) {var fields = _ref4.fields,_ref4$sort = _ref4.sort,sort = _ref4$sort === void 0 ? [] : _ref4$sort;
      var targetFields = fields;
      if (typeof fields === 'undefined') {
        targetFields = this.state.rawDataFields;
      }
      return (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.downloadDataFromGuppy)(
        this.props.guppyConfig.path,
        this.props.guppyConfig.type,
        this.state.totalCount,
        {
          fields: targetFields,
          sort: sort,
          filter: this.state.filter,
          accessibility: this.state.accessibility
        },
        this.props.csrfToken
      );
    }

    /**
     * Get total count from other es type, with filter
     * @param {string} type
     * @param {object} filter
     */ }, { key: "handleAskGuppyForTotalCounts", value:
    function handleAskGuppyForTotalCounts(type, filter) {
      return (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.askGuppyForTotalCounts)(
        this.props.guppyConfig.path,
        type,
        filter,
        this.state.accessibility,
        this.props.csrfToken
      );
    }

    /**
     * Get raw data from other es type, with filter
     * @param {string} type
     * @param {object} filter
     * @param {string[]} fields
     */ }, { key: "handleDownloadRawDataByTypeAndFilter", value:
    function handleDownloadRawDataByTypeAndFilter(type, filter, fields) {var _this4 = this;
      return (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.askGuppyForTotalCounts)(
        this.props.guppyConfig.path,
        type,
        filter,
        this.state.accessibility,
        this.props.csrfToken
      ).
      then(function (count) {return (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.downloadDataFromGuppy)(
          _this4.props.guppyConfig.path,
          type,
          count,
          {
            fields: fields,
            filter: filter
          },
          _this4.props.csrfToken
        );});
    } }, { key: "handleAccessLevelUpdate", value:

    function handleAccessLevelUpdate(accessLevel) {
      this.setState({ accessibility: accessLevel });
    }

    /**
     * This function get data with current filter (if any),
     * and update this.state.rawData and this.state.totalCount
     * @param {string[]} fields
     * @param {object} sort
     * @param {bool} updateDataWhenReceive
     * @param {number} offset
     * @param {number} size
     */ }, { key: "getDataFromGuppy", value:
    function getDataFromGuppy(fields, sort, updateDataWhenReceive, offset, size) {var _this5 = this;
      this.setState({ gettingDataFromGuppy: true });
      if (!fields || fields.length === 0) {
        this.setState({ gettingDataFromGuppy: false });
        return Promise.resolve({ data: [], totalCount: 0 });
      }

      // sub aggregations -- for DAT
      if (this.props.guppyConfig.mainField) {
        var numericAggregation = this.props.guppyConfig.mainFieldIsNumeric;
        return (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.askGuppyForSubAggregationData)(
          this.props.guppyConfig.path,
          this.props.guppyConfig.type,
          this.props.guppyConfig.mainField,
          numericAggregation,
          this.props.guppyConfig.aggFields,
          [],
          this.filter,
          this.state.accessibility,
          this.props.csrfToken
        ).then(function (res) {
          if (!res || !res.data) {
            throw new Error("Error getting raw ".concat(_this5.props.guppyConfig.type, " data from Guppy server ").concat(_this5.props.guppyConfig.path, "."));
          }
          var data = res.data._aggregation[_this5.props.guppyConfig.type];
          var field = numericAggregation ? 'asTextHistogram' : 'histogram';
          var parsedData = data[_this5.props.guppyConfig.mainField][field];
          if (updateDataWhenReceive) {
            _this5.setState({
              rawData: parsedData
            });
          }
          _this5.setState({ gettingDataFromGuppy: false });
          return {
            data: res.data
          };
        });
      }

      // non-nested aggregation
      return (0,_Utils_queries__WEBPACK_IMPORTED_MODULE_1__.askGuppyForRawData)(
        this.props.guppyConfig.path,
        this.props.guppyConfig.type,
        fields,
        this.filter,
        sort,
        undefined,
        offset,
        size,
        this.state.accessibility,
        this.props.csrfToken
      ).then(function (res) {
        if (!res || !res.data) {
          throw new Error("Error getting raw ".concat(_this5.props.guppyConfig.type, " data from Guppy server ").concat(_this5.props.guppyConfig.path, "."));
        }
        var parsedData = res.data[_this5.props.guppyConfig.type];
        var totalCount = res.data._aggregation[_this5.props.guppyConfig.type]._totalCount;
        if (updateDataWhenReceive) {
          _this5.setState({
            rawData: parsedData,
            totalCount: totalCount
          });
        }
        _this5.setState({ gettingDataFromGuppy: false });
        return {
          data: parsedData,
          totalCount: totalCount
        };
      });
    } }, { key: "render", value:

    function render() {var _this6 = this;
      return (/*#__PURE__*/
        (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, { children:

          react__WEBPACK_IMPORTED_MODULE_0__.Children.map(this.props.children, function (child) {return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
              // pass data to children
              aggsData: _this6.state.aggsData,
              aggsDataIsLoading: _this6.state.gettingDataFromGuppy,
              filter: _this6.state.filter,
              filterConfig: _this6.props.filterConfig,
              rawData: _this6.state.rawData, // raw data (with current filter applied)
              totalCount: _this6.state.totalCount, // total count of raw data (current filter applied)
              fetchAndUpdateRawData: _this6.handleFetchAndUpdateRawData.bind(_this6),
              downloadRawData: _this6.handleDownloadRawData.bind(_this6),
              downloadRawDataByFields: _this6.handleDownloadRawDataByFields.bind(_this6),
              allRegularAggFields: _this6.state.allRegularAggFields,
              allAsTextAggFields: _this6.state.allAsTextAggFields,
              accessibleFieldObject: _this6.state.accessibleFieldObject,
              unaccessibleFieldObject: _this6.state.unaccessibleFieldObject,

              // a callback function which return total counts for any type, with any filter
              getTotalCountsByTypeAndFilter: _this6.handleAskGuppyForTotalCounts.bind(_this6),
              downloadRawDataByTypeAndFilter: _this6.handleDownloadRawDataByTypeAndFilter.bind(_this6),

              // below are just for ConnectedFilter component
              onReceiveNewAggsData: _this6.handleReceiveNewAggsData.bind(_this6),
              onFilterChange: _this6.handleFilterChange.bind(_this6),
              guppyConfig: _this6.props.guppyConfig,
              onUpdateAccessLevel: _this6.handleAccessLevelUpdate.bind(_this6),
              adminAppliedPreFilters: _this6.props.adminAppliedPreFilters,
              accessibleFieldCheckList: _this6.props.accessibleFieldCheckList,
              csrfToken: _this6.props.csrfToken
            });}) }

        ));

    } }]);}(react__WEBPACK_IMPORTED_MODULE_0__.Component);GuppyWrapper.displayName = "GuppyWrapper";


GuppyWrapper.propTypes = {
  guppyConfig: prop_types__WEBPACK_IMPORTED_MODULE_5___default().shape({
    path: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
    type: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
    mainField: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
    mainFieldIsNumeric: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool),
    aggFields: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().array)
  }).isRequired,
  children: prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOfType([
  prop_types__WEBPACK_IMPORTED_MODULE_5___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_5___default().node)),
  (prop_types__WEBPACK_IMPORTED_MODULE_5___default().node)]
  ).isRequired,
  filterConfig: prop_types__WEBPACK_IMPORTED_MODULE_5___default().shape({
    tabs: prop_types__WEBPACK_IMPORTED_MODULE_5___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_5___default().shape({
      title: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
      fields: prop_types__WEBPACK_IMPORTED_MODULE_5___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_5___default().string)),
      searchFields: prop_types__WEBPACK_IMPORTED_MODULE_5___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_5___default().string))
    }))
  }).isRequired,
  rawDataFields: prop_types__WEBPACK_IMPORTED_MODULE_5___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_5___default().string)),
  onReceiveNewAggsData: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func),
  onFilterChange: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func),
  accessibleFieldCheckList: prop_types__WEBPACK_IMPORTED_MODULE_5___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_5___default().string)),
  adminAppliedPreFilters: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().object),
  initialFilterFromURL: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().object),
  csrfToken: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string)
};

GuppyWrapper.defaultProps = {
  onReceiveNewAggsData: function onReceiveNewAggsData() {},
  onFilterChange: function onFilterChange() {},
  rawDataFields: [],
  accessibleFieldCheckList: undefined,
  adminAppliedPreFilters: {},
  initialFilterFromURL: {},
  csrfToken: ''
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GuppyWrapper);

/***/ }),

/***/ "./src/components/Utils/const.js":
/*!***************************************!*\
  !*** ./src/components/Utils/const.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ENUM_ACCESSIBILITY: () => (/* binding */ ENUM_ACCESSIBILITY),
/* harmony export */   FILE_DELIMITERS: () => (/* binding */ FILE_DELIMITERS),
/* harmony export */   FILE_FORMATS: () => (/* binding */ FILE_FORMATS)
/* harmony export */ });
var ENUM_ACCESSIBILITY = {
  ACCESSIBLE: 'accessible',
  UNACCESSIBLE: 'unaccessible',
  ALL: 'all'
};

var FILE_FORMATS = {
  JSON: 'json',
  TSV: 'tsv',
  CSV: 'csv'
};

var FILE_DELIMITERS = {
  tsv: '\t',
  csv: ','
};

/***/ }),

/***/ "./src/components/Utils/conversion.js":
/*!********************************************!*\
  !*** ./src/components/Utils/conversion.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   conversion: () => (/* binding */ conversion),
/* harmony export */   flattenJson: () => (/* binding */ flattenJson),
/* harmony export */   jsonToFormat: () => (/* binding */ jsonToFormat)
/* harmony export */ });
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const */ "./src/components/Utils/const.js");
function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function _regeneratorRuntime() {"use strict";
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime = function _regeneratorRuntime() {return e;};var t,e = {},r = Object.prototype,n = r.hasOwnProperty,o = Object.defineProperty || function (t, e, r) {t[e] = r.value;},i = "function" == typeof Symbol ? Symbol : {},a = i.iterator || "@@iterator",c = i.asyncIterator || "@@asyncIterator",u = i.toStringTag || "@@toStringTag";function define(t, e, r) {return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e];}try {define({}, "");} catch (t) {define = function define(t, e, r) {return t[e] = r;};}function wrap(t, e, r, n) {var i = e && e.prototype instanceof Generator ? e : Generator,a = Object.create(i.prototype),c = new Context(n || []);return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a;}function tryCatch(t, e, r) {try {return { type: "normal", arg: t.call(e, r) };} catch (t) {return { type: "throw", arg: t };}}e.wrap = wrap;var h = "suspendedStart",l = "suspendedYield",f = "executing",s = "completed",y = {};function Generator() {}function GeneratorFunction() {}function GeneratorFunctionPrototype() {}var p = {};define(p, a, function () {return this;});var d = Object.getPrototypeOf,v = d && d(d(values([])));v && v !== r && n.call(v, a) && (p = v);var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);function defineIteratorMethods(t) {["next", "throw", "return"].forEach(function (e) {define(t, e, function (t) {return this._invoke(e, t);});});}function AsyncIterator(t, e) {function invoke(r, o, i, a) {var c = tryCatch(t[r], t, o);if ("throw" !== c.type) {var u = c.arg,h = u.value;return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {invoke("next", t, i, a);}, function (t) {invoke("throw", t, i, a);}) : e.resolve(h).then(function (t) {u.value = t, i(u);}, function (t) {return invoke("throw", t, i, a);});}a(c.arg);}var r;o(this, "_invoke", { value: function value(t, n) {function callInvokeWithMethodAndArg() {return new e(function (e, r) {invoke(t, n, e, r);});}return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();} });}function makeInvokeMethod(e, r, n) {var o = h;return function (i, a) {if (o === f) throw Error("Generator is already running");if (o === s) {if ("throw" === i) throw a;return { value: t, done: !0 };}for (n.method = i, n.arg = a;;) {var c = n.delegate;if (c) {var u = maybeInvokeDelegate(c, n);if (u) {if (u === y) continue;return u;}}if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {if (o === h) throw o = s, n.arg;n.dispatchException(n.arg);} else "return" === n.method && n.abrupt("return", n.arg);o = f;var p = tryCatch(e, r, n);if ("normal" === p.type) {if (o = n.done ? s : l, p.arg === y) continue;return { value: p.arg, done: n.done };}"throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);}};}function maybeInvokeDelegate(e, r) {var n = r.method,o = e.iterator[n];if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;var i = tryCatch(o, e.iterator, r.arg);if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;var a = i.arg;return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);}function pushTryEntry(t) {var e = { tryLoc: t[0] };1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);}function resetTryEntry(t) {var e = t.completion || {};e.type = "normal", delete e.arg, t.completion = e;}function Context(t) {this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0);}function values(e) {if (e || "" === e) {var r = e[a];if (r) return r.call(e);if ("function" == typeof e.next) return e;if (!isNaN(e.length)) {var o = -1,i = function next() {for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;return next.value = t, next.done = !0, next;};return i.next = i;}}throw new TypeError(_typeof(e) + " is not iterable");}return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {var e = "function" == typeof t && t.constructor;return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));}, e.mark = function (t) {return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;}, e.awrap = function (t) {return { __await: t };}, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {return this;}), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {void 0 === i && (i = Promise);var a = new AsyncIterator(wrap(t, r, n, o), i);return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {return t.done ? t.value : a.next();});}, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {return this;}), define(g, "toString", function () {return "[object Generator]";}), e.keys = function (t) {var e = Object(t),r = [];for (var n in e) r.push(n);return r.reverse(), function next() {for (; r.length;) {var t = r.pop();if (t in e) return next.value = t, next.done = !1, next;}return next.done = !0, next;};}, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) {if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);}, stop: function stop() {this.done = !0;var t = this.tryEntries[0].completion;if ("throw" === t.type) throw t.arg;return this.rval;}, dispatchException: function dispatchException(e) {if (this.done) throw e;var r = this;function handle(n, o) {return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;}for (var o = this.tryEntries.length - 1; o >= 0; --o) {var i = this.tryEntries[o],a = i.completion;if ("root" === i.tryLoc) return handle("end");if (i.tryLoc <= this.prev) {var c = n.call(i, "catchLoc"),u = n.call(i, "finallyLoc");if (c && u) {if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);if (this.prev < i.finallyLoc) return handle(i.finallyLoc);} else if (c) {if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);} else {if (!u) throw Error("try statement without catch or finally");if (this.prev < i.finallyLoc) return handle(i.finallyLoc);}}}}, abrupt: function abrupt(t, e) {for (var r = this.tryEntries.length - 1; r >= 0; --r) {var o = this.tryEntries[r];if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {var i = o;break;}}i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);var a = i ? i.completion : {};return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);}, complete: function complete(t, e) {if ("throw" === t.type) throw t.arg;return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;}, finish: function finish(t) {for (var e = this.tryEntries.length - 1; e >= 0; --e) {var r = this.tryEntries[e];if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;}}, "catch": function _catch(t) {for (var e = this.tryEntries.length - 1; e >= 0; --e) {var r = this.tryEntries[e];if (r.tryLoc === t) {var n = r.completion;if ("throw" === n.type) {var o = n.arg;resetTryEntry(r);}return o;}}throw Error("illegal catch attempt");}, delegateYield: function delegateYield(e, r, n) {return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y;} }, e;}function asyncGeneratorStep(n, t, e, r, o, a, c) {try {var i = n[a](c),u = i.value;} catch (n) {return void e(n);}i.done ? t(u) : Promise.resolve(u).then(r, o);}function _asyncToGenerator(n) {return function () {var t = this,e = arguments;return new Promise(function (r, o) {var a = n.apply(t, e);function _next(n) {asyncGeneratorStep(a, r, o, _next, _throw, "next", n);}function _throw(n) {asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);}_next(void 0);});};}
var papaparse = __webpack_require__(/*! papaparse */ "./node_modules/papaparse/papaparse.min.js");
var flatten = __webpack_require__(/*! flat */ "./node_modules/flat/index.js");

/**
 * Flattens a deep nested JSON object skipping
 * the first level to avoid potentially flattening
 * non-nested data.
 * @param {JSON} json
 */
function flattenJson(_x) {return _flattenJson.apply(this, arguments);}







/**
 * Converts JSON based on a config.
 * @param {JSON} json
 * @param {Object} config
 */function _flattenJson() {_flattenJson = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(json) {var flattenedJson;return _regeneratorRuntime().wrap(function _callee$(_context) {while (1) switch (_context.prev = _context.next) {case 0:flattenedJson = [];Object.keys(json).forEach(function (key) {flattenedJson.push(flatten(json[key], { delimiter: '_' }));});return _context.abrupt("return", flattenedJson);case 3:case "end":return _context.stop();}}, _callee);}));return _flattenJson.apply(this, arguments);}
function conversion(_x2, _x3) {return _conversion.apply(this, arguments);}



/**
 * Converts JSON to a specified file format.
 * Defaultes to JSON if file format is not supported.
 * @param {JSON} json
 * @param {string} format
 */function _conversion() {_conversion = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(json, config) {return _regeneratorRuntime().wrap(function _callee2$(_context2) {while (1) switch (_context2.prev = _context2.next) {case 0:return _context2.abrupt("return", papaparse.unparse(json, config));case 1:case "end":return _context2.stop();}}, _callee2);}));return _conversion.apply(this, arguments);}
function jsonToFormat(_x4, _x5) {return _jsonToFormat.apply(this, arguments);}function _jsonToFormat() {_jsonToFormat = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(json, format) {var flatJson, data;return _regeneratorRuntime().wrap(function _callee3$(_context3) {while (1) switch (_context3.prev = _context3.next) {case 0:if (!(
          format in _const__WEBPACK_IMPORTED_MODULE_0__.FILE_DELIMITERS)) {_context3.next = 8;break;}_context3.next = 3;return (
            flattenJson(json));case 3:flatJson = _context3.sent;_context3.next = 6;return (
            conversion(flatJson, { delimiter: _const__WEBPACK_IMPORTED_MODULE_0__.FILE_DELIMITERS[format] }));case 6:data = _context3.sent;return _context3.abrupt("return",
          data);case 8:return _context3.abrupt("return",

          json);case 9:case "end":return _context3.stop();}}, _callee3);}));return _jsonToFormat.apply(this, arguments);}

/***/ }),

/***/ "./src/components/Utils/filters.js":
/*!*****************************************!*\
  !*** ./src/components/Utils/filters.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   buildFilterStatusForURLFilter: () => (/* binding */ buildFilterStatusForURLFilter),
/* harmony export */   mergeFilters: () => (/* binding */ mergeFilters),
/* harmony export */   mergeTabOptions: () => (/* binding */ mergeTabOptions),
/* harmony export */   sortTabsOptions: () => (/* binding */ sortTabsOptions),
/* harmony export */   updateCountsInInitialTabsOptions: () => (/* binding */ updateCountsInInitialTabsOptions)
/* harmony export */ });
/* harmony import */ var flat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! flat */ "./node_modules/flat/index.js");
/* harmony import */ var flat__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(flat__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(e, r, t) {return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}


/**
   * This function takes two objects containing filters to be applied
   * and combines them into one filter object in the same format.
   * Note: the admin filter takes precedence. Selected values in the user
   * filter will be discarded if the key collides. This is to avoid
   * the user undoing the admin filter. (Multiple user checkboxes increase the
   * amount of data shown when combined, but an admin filter should always decrease
   * or keep constant the amount of data shown when combined with a user filter).
  * */
var mergeFilters = function mergeFilters(userFilter, adminAppliedPreFilter) {
  var filterAB = _objectSpread({}, userFilter);
  Object.keys(adminAppliedPreFilter).forEach(function (key) {
    if (Object.prototype.hasOwnProperty.call(userFilter, key) &&
    Object.prototype.hasOwnProperty.call(adminAppliedPreFilter, key)) {
      var userFilterSubset = userFilter[key].selectedValues.filter(
        function (x) {return adminAppliedPreFilter[key].selectedValues.includes(x);}
      );
      if (userFilterSubset.length > 0) {
        // The user-applied filter is more exclusive than the admin-applied filter.
        filterAB[key].selectedValues = userFilter[key].selectedValues;
      } else {
        // The admin-applied filter is more exclusive than the user-applied filter.
        filterAB[key].selectedValues = adminAppliedPreFilter[key].selectedValues;
      }
    } else if (Object.prototype.hasOwnProperty.call(adminAppliedPreFilter, key)) {
      filterAB[key] = { selectedValues: adminAppliedPreFilter[key].selectedValues };
    }
  });

  return filterAB;
};

/**
   * This function updates the counts in the initial set of tab options
   * calculated from unfiltered data.
   * It is used to retain field options in the rendering if
   * they are still checked but their counts are zero.
   */
var updateCountsInInitialTabsOptions = function updateCountsInInitialTabsOptions(
initialTabsOptions,
processedTabsOptions,
filtersApplied,
accessibleFieldCheckList,
allFilterValues)
{
  var updatedTabsOptions = {};
  try {
    // flatten the tab options first
    // {
    //   project_id.histogram: ...
    //   visit.visit_label.histogram: ...
    // }
    var flattenInitialTabsOptions = flat__WEBPACK_IMPORTED_MODULE_0___default()(initialTabsOptions, { safe: true });
    var flattenProcessedTabsOptions = flat__WEBPACK_IMPORTED_MODULE_0___default()(processedTabsOptions, { safe: true });
    Object.keys(flattenInitialTabsOptions).forEach(function (field) {
      // in flattened tab options, to get actual field name, strip off the last '.histogram' or '.asTextHistogram'
      var actualFieldName = field.replace('.histogram', '').replace('.asTextHistogram', '');

      // check if Filter Value if not skip
      if (!allFilterValues.includes(actualFieldName)) {
        return;
      }

      // possible to have '.' in actualFieldName, so use it as a string
      updatedTabsOptions["".concat(actualFieldName)] = { histogram: [] };
      // if in tiered access mode
      // we need not to process filters for field in accessibleFieldCheckList
      if (accessibleFieldCheckList &&
      accessibleFieldCheckList.includes(actualFieldName) &&
      flattenProcessedTabsOptions["".concat(field)]) {
        updatedTabsOptions["".concat(actualFieldName)].histogram = flattenProcessedTabsOptions["".concat(field)];
        return;
      }
      var histogram = flattenInitialTabsOptions["".concat(field)];
      if (!histogram || _typeof(histogram) !== 'object') {
        console.error("Guppy did not return histogram data for filter field ".concat(actualFieldName)); // eslint-disable-line no-console
        return;
      }
      histogram.forEach(function (opt) {
        var key = opt.key;
        if (typeof key !== 'string') {// key is a range, just copy the histogram
          updatedTabsOptions["".concat(actualFieldName)].histogram = flattenInitialTabsOptions["".concat(field)];
          if (flattenProcessedTabsOptions["".concat(field)] &&
          flattenProcessedTabsOptions["".concat(field)].length > 0 &&
          updatedTabsOptions["".concat(actualFieldName)].histogram) {
            var currentFlattenProcessedTabsOptions = flattenProcessedTabsOptions["".concat(field)][0];

            // if empty count histogram should be removed so filter is not shown
            if (currentFlattenProcessedTabsOptions.count === 0) {
              updatedTabsOptions["".concat(actualFieldName)].histogram = [];
              return;
            }
            updatedTabsOptions["".concat(actualFieldName)].histogram[0].count = currentFlattenProcessedTabsOptions.count;
            var newKey = [0, 0];
            if (currentFlattenProcessedTabsOptions.key[0]) {
              // because of the prefer-destructuring eslint rule
              var newLowerBound = currentFlattenProcessedTabsOptions.key[0];
              newKey[0] = newLowerBound;
            }
            if (currentFlattenProcessedTabsOptions.key[1]) {
              var newHigherBound = currentFlattenProcessedTabsOptions.key[1];
              newKey[1] = newHigherBound;
            }
            updatedTabsOptions["".concat(actualFieldName)].histogram[0].key = newKey;
          }
          return;
        }
        if (flattenProcessedTabsOptions["".concat(field)]) {
          var findOpt = flattenProcessedTabsOptions["".concat(field)].find(function (o) {return o.key === key;});
          if (findOpt) {
            var count = findOpt.count;
            updatedTabsOptions["".concat(actualFieldName)].histogram.push({ key: key, count: count });
          }
        }
      });
      if (filtersApplied["".concat(actualFieldName)]) {
        if (filtersApplied["".concat(actualFieldName)].selectedValues) {
          filtersApplied["".concat(actualFieldName)].selectedValues.forEach(function (optKey) {
            if (!updatedTabsOptions["".concat(actualFieldName)].histogram.find(function (o) {return o.key === optKey;})) {
              updatedTabsOptions["".concat(actualFieldName)].histogram.push({ key: optKey, count: 0 });
            }
          });
        }
      }
    });
  } catch (err) {
    /* eslint-disable no-console */
    // hopefully we won't get here but in case of
    // out-of-index error or obj undefined error
    console.error('error when processing filter data: ', err);
    console.trace();
    /* eslint-enable no-console */
  }
  return updatedTabsOptions;
};

function sortCountThenAlpha(a, b) {
  if (a.count === b.count) {
    return a.key < b.key ? -1 : 1;
  }
  return b.count - a.count;
}

var sortTabsOptions = function sortTabsOptions(tabsOptions) {
  var fields = Object.keys(tabsOptions);
  var sortedTabsOptions = _objectSpread({}, tabsOptions);
  for (var x = 0; x < fields.length; x += 1) {
    var field = fields[x];

    var optionsForThisField = sortedTabsOptions[field].histogram;
    optionsForThisField.sort(sortCountThenAlpha);
    sortedTabsOptions[field].histogram = optionsForThisField;
  }
  return sortedTabsOptions;
};

/**
   * This function takes two TabsOptions object and merge them together
   * The order of merged histogram array is preserved by firstHistogram.concat(secondHistogram)
   */
var mergeTabOptions = function mergeTabOptions(firstTabsOptions, secondTabsOptions) {
  if (!firstTabsOptions || !Object.keys(firstTabsOptions).length) {
    return secondTabsOptions;
  }
  if (!secondTabsOptions || !Object.keys(secondTabsOptions).length) {
    return firstTabsOptions;
  }

  var allOptionKeys = lodash__WEBPACK_IMPORTED_MODULE_1___default().union(Object.keys(firstTabsOptions), Object.keys(secondTabsOptions));
  var mergedTabOptions = {};
  allOptionKeys.forEach(function (optKey) {
    if (!mergedTabOptions["".concat(optKey)]) {
      mergedTabOptions["".concat(optKey)] = {};
    }
    if (!mergedTabOptions["".concat(optKey)].histogram) {
      mergedTabOptions["".concat(optKey)].histogram = [];
    }
    var firstHistogram = firstTabsOptions["".concat(optKey)] && firstTabsOptions["".concat(optKey)].histogram ? firstTabsOptions["".concat(optKey)].histogram : [];
    var secondHistogram = secondTabsOptions["".concat(optKey)] && secondTabsOptions["".concat(optKey)].histogram ? secondTabsOptions["".concat(optKey)].histogram : [];
    mergedTabOptions["".concat(optKey)].histogram = firstHistogram.concat(secondHistogram);
  });
  return mergedTabOptions;
};

var buildFilterStatusForURLFilter = function buildFilterStatusForURLFilter(userFilter, tabs) {
  // Converts filter-applied form to filter-displayed form
  // TODO: add support for search filters
  var filteringFields = Object.keys(userFilter);
  var filterStatusArray = tabs.map(function () {return [];});

  for (var tabIndex = 0; tabIndex < tabs.length; tabIndex += 1) {
    var allFieldsForThisTab = lodash__WEBPACK_IMPORTED_MODULE_1___default().union(tabs[tabIndex].fields, tabs[tabIndex].asTextAggFields || []);
    filterStatusArray[tabIndex] = allFieldsForThisTab.map(function () {return {};});
    for (var i = 0; i < filteringFields.length; i += 1) {
      var sectionIndex = allFieldsForThisTab.indexOf(filteringFields[i]);
      if (sectionIndex !== -1) {
        var userFilterSmallForm = {};
        var filterVar = userFilter[filteringFields[i]];
        if (_typeof(filterVar) === 'object' && filterVar.selectedValues) {
          // Single select values:
          for (var j = 0; j < filterVar.selectedValues.length; j += 1) {
            userFilterSmallForm[filterVar.selectedValues[j]] = true;
          }
        } else if (_typeof(filterVar) === 'object' && (
        filterVar.lowerBound || filterVar.upperBound)) {
          // Range values:
          userFilterSmallForm = [filterVar.lowerBound, filterVar.upperBound];
        }
        filterStatusArray[tabIndex][sectionIndex] = userFilterSmallForm;
      }
    }
  }

  return filterStatusArray;
};

/***/ }),

/***/ "./src/components/Utils/queries.js":
/*!*****************************************!*\
  !*** ./src/components/Utils/queries.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   askGuppyAboutArrayTypes: () => (/* binding */ askGuppyAboutArrayTypes),
/* harmony export */   askGuppyForAggregationData: () => (/* binding */ askGuppyForAggregationData),
/* harmony export */   askGuppyForRawData: () => (/* binding */ askGuppyForRawData),
/* harmony export */   askGuppyForSubAggregationData: () => (/* binding */ askGuppyForSubAggregationData),
/* harmony export */   askGuppyForTotalCounts: () => (/* binding */ askGuppyForTotalCounts),
/* harmony export */   downloadDataFromGuppy: () => (/* binding */ downloadDataFromGuppy),
/* harmony export */   getAccessibleResources: () => (/* binding */ getAccessibleResources),
/* harmony export */   getAllFieldsFromFilterConfigs: () => (/* binding */ getAllFieldsFromFilterConfigs),
/* harmony export */   getAllFieldsFromGuppy: () => (/* binding */ getAllFieldsFromGuppy),
/* harmony export */   getGQLFilter: () => (/* binding */ getGQLFilter),
/* harmony export */   queryGuppyForRawDataAndTotalCounts: () => (/* binding */ queryGuppyForRawDataAndTotalCounts)
/* harmony export */ });
/* harmony import */ var isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-fetch */ "./node_modules/isomorphic-fetch/fetch-npm-browserify.js");
/* harmony import */ var isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _conversion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conversion */ "./src/components/Utils/conversion.js");
function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}function _regeneratorRuntime() {"use strict";
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime = function _regeneratorRuntime() {return e;};var t,e = {},r = Object.prototype,n = r.hasOwnProperty,o = Object.defineProperty || function (t, e, r) {t[e] = r.value;},i = "function" == typeof Symbol ? Symbol : {},a = i.iterator || "@@iterator",c = i.asyncIterator || "@@asyncIterator",u = i.toStringTag || "@@toStringTag";function define(t, e, r) {return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e];}try {define({}, "");} catch (t) {define = function define(t, e, r) {return t[e] = r;};}function wrap(t, e, r, n) {var i = e && e.prototype instanceof Generator ? e : Generator,a = Object.create(i.prototype),c = new Context(n || []);return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a;}function tryCatch(t, e, r) {try {return { type: "normal", arg: t.call(e, r) };} catch (t) {return { type: "throw", arg: t };}}e.wrap = wrap;var h = "suspendedStart",l = "suspendedYield",f = "executing",s = "completed",y = {};function Generator() {}function GeneratorFunction() {}function GeneratorFunctionPrototype() {}var p = {};define(p, a, function () {return this;});var d = Object.getPrototypeOf,v = d && d(d(values([])));v && v !== r && n.call(v, a) && (p = v);var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);function defineIteratorMethods(t) {["next", "throw", "return"].forEach(function (e) {define(t, e, function (t) {return this._invoke(e, t);});});}function AsyncIterator(t, e) {function invoke(r, o, i, a) {var c = tryCatch(t[r], t, o);if ("throw" !== c.type) {var u = c.arg,h = u.value;return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {invoke("next", t, i, a);}, function (t) {invoke("throw", t, i, a);}) : e.resolve(h).then(function (t) {u.value = t, i(u);}, function (t) {return invoke("throw", t, i, a);});}a(c.arg);}var r;o(this, "_invoke", { value: function value(t, n) {function callInvokeWithMethodAndArg() {return new e(function (e, r) {invoke(t, n, e, r);});}return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();} });}function makeInvokeMethod(e, r, n) {var o = h;return function (i, a) {if (o === f) throw Error("Generator is already running");if (o === s) {if ("throw" === i) throw a;return { value: t, done: !0 };}for (n.method = i, n.arg = a;;) {var c = n.delegate;if (c) {var u = maybeInvokeDelegate(c, n);if (u) {if (u === y) continue;return u;}}if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {if (o === h) throw o = s, n.arg;n.dispatchException(n.arg);} else "return" === n.method && n.abrupt("return", n.arg);o = f;var p = tryCatch(e, r, n);if ("normal" === p.type) {if (o = n.done ? s : l, p.arg === y) continue;return { value: p.arg, done: n.done };}"throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);}};}function maybeInvokeDelegate(e, r) {var n = r.method,o = e.iterator[n];if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;var i = tryCatch(o, e.iterator, r.arg);if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;var a = i.arg;return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);}function pushTryEntry(t) {var e = { tryLoc: t[0] };1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);}function resetTryEntry(t) {var e = t.completion || {};e.type = "normal", delete e.arg, t.completion = e;}function Context(t) {this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0);}function values(e) {if (e || "" === e) {var r = e[a];if (r) return r.call(e);if ("function" == typeof e.next) return e;if (!isNaN(e.length)) {var o = -1,i = function next() {for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;return next.value = t, next.done = !0, next;};return i.next = i;}}throw new TypeError(_typeof(e) + " is not iterable");}return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {var e = "function" == typeof t && t.constructor;return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));}, e.mark = function (t) {return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;}, e.awrap = function (t) {return { __await: t };}, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {return this;}), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {void 0 === i && (i = Promise);var a = new AsyncIterator(wrap(t, r, n, o), i);return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {return t.done ? t.value : a.next();});}, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {return this;}), define(g, "toString", function () {return "[object Generator]";}), e.keys = function (t) {var e = Object(t),r = [];for (var n in e) r.push(n);return r.reverse(), function next() {for (; r.length;) {var t = r.pop();if (t in e) return next.value = t, next.done = !1, next;}return next.done = !0, next;};}, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) {if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);}, stop: function stop() {this.done = !0;var t = this.tryEntries[0].completion;if ("throw" === t.type) throw t.arg;return this.rval;}, dispatchException: function dispatchException(e) {if (this.done) throw e;var r = this;function handle(n, o) {return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;}for (var o = this.tryEntries.length - 1; o >= 0; --o) {var i = this.tryEntries[o],a = i.completion;if ("root" === i.tryLoc) return handle("end");if (i.tryLoc <= this.prev) {var c = n.call(i, "catchLoc"),u = n.call(i, "finallyLoc");if (c && u) {if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);if (this.prev < i.finallyLoc) return handle(i.finallyLoc);} else if (c) {if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);} else {if (!u) throw Error("try statement without catch or finally");if (this.prev < i.finallyLoc) return handle(i.finallyLoc);}}}}, abrupt: function abrupt(t, e) {for (var r = this.tryEntries.length - 1; r >= 0; --r) {var o = this.tryEntries[r];if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {var i = o;break;}}i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);var a = i ? i.completion : {};return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);}, complete: function complete(t, e) {if ("throw" === t.type) throw t.arg;return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;}, finish: function finish(t) {for (var e = this.tryEntries.length - 1; e >= 0; --e) {var r = this.tryEntries[e];if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;}}, "catch": function _catch(t) {for (var e = this.tryEntries.length - 1; e >= 0; --e) {var r = this.tryEntries[e];if (r.tryLoc === t) {var n = r.completion;if ("throw" === n.type) {var o = n.arg;resetTryEntry(r);}return o;}}throw Error("illegal catch attempt");}, delegateYield: function delegateYield(e, r, n) {return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y;} }, e;}function asyncGeneratorStep(n, t, e, r, o, a, c) {try {var i = n[a](c),u = i.value;} catch (n) {return void e(n);}i.done ? t(u) : Promise.resolve(u).then(r, o);}function _asyncToGenerator(n) {return function () {var t = this,e = arguments;return new Promise(function (r, o) {var a = n.apply(t, e);function _next(n) {asyncGeneratorStep(a, r, o, _next, _throw, "next", n);}function _throw(n) {asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);}_next(void 0);});};}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(e, r, t) {return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}

var graphqlEndpoint = '/graphql';
var downloadEndpoint = '/download';
var statusEndpoint = '/_status';
var headers = {
  'Content-Type': 'application/json'
};

var _histogramQueryStrForEachField = function histogramQueryStrForEachField(field) {var isAsTextAgg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var splittedFieldArray = field.split('.');
  var splittedField = splittedFieldArray.shift();
  if (splittedFieldArray.length === 0) {
    return "\n    ".concat(
      splittedField, " {\n      ").concat(
      isAsTextAgg ? 'asTextHistogram' : 'histogram', " {\n        key\n        count\n      }\n    }");




  }
  return "\n  ".concat(
    splittedField, " {\n    ").concat(
    _histogramQueryStrForEachField(splittedFieldArray.join('.')), "\n  }");

};

var queryGuppyForAggs = function queryGuppyForAggs(path, type, regularAggFields, asTextAggFields, gqlFilter, acc) {var csrfToken = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';
  var accessibility = acc;
  if (accessibility !== 'all' && accessibility !== 'accessible' && accessibility !== 'unaccessible') {
    accessibility = 'all';
  }

  var queryBody = {};
  if (gqlFilter) {
    var queryWithFilter = "query ($filter: JSON) {\n      _aggregation {\n        ".concat(

      type, " (filter: $filter, filterSelf: false, accessibility: ").concat(accessibility, ") {\n          ").concat(
      regularAggFields.map(function (field) {return _histogramQueryStrForEachField(field, false);}), "\n          ").concat(
      asTextAggFields.map(function (field) {return _histogramQueryStrForEachField(field, true);}), "\n        }\n      }\n    }");



    queryBody.variables = { filter: gqlFilter };
    queryBody.query = queryWithFilter;
  } else {
    queryBody.query = "query {\n      _aggregation {\n        ".concat(

      type, " (accessibility: ").concat(accessibility, ") {\n          ").concat(
      regularAggFields.map(function (field) {return _histogramQueryStrForEachField(field, false);}), "\n          ").concat(
      asTextAggFields.map(function (field) {return _histogramQueryStrForEachField(field, true);}), "\n        }\n      }\n    }");



  }

  return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(graphqlEndpoint), {
    method: 'POST',
    headers: csrfToken ? _objectSpread(_objectSpread({}, headers), {}, { 'x-csrf-token': csrfToken }) : headers,
    body: JSON.stringify(queryBody)
  }).then(function (response) {return response.json();});
};

var queryGuppyForStatus = function queryGuppyForStatus(path) {return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(statusEndpoint), {
    method: 'GET',
    headers: headers
  }).then(function (response) {return response.json();});};

var nestedHistogramQueryStrForEachField = function nestedHistogramQueryStrForEachField(mainField, numericAggAsText) {return "\n  ".concat(
    mainField, " {\n    ").concat(
    numericAggAsText ? 'asTextHistogram' : 'histogram', " {\n      key\n      count\n      missingFields {\n        field\n        count\n      }\n      termsFields {\n        field\n        count\n        terms {\n          key\n          count\n        }\n      }\n    }\n  }");};

















var queryGuppyForSubAgg = function queryGuppyForSubAgg(
path,
type,
mainField,
termsFields,
missingFields,
gqlFilter,
acc)


{var numericAggAsText = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;var csrfToken = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : '';
  var accessibility = acc;
  if (accessibility !== 'all' && accessibility !== 'accessible' && accessibility !== 'unaccessible') {
    accessibility = 'all';
  }

  var nestedAggFields = {};
  if (termsFields) {
    nestedAggFields.termsFields = termsFields;
  }
  if (missingFields) {
    nestedAggFields.missingFields = missingFields;
  }

  var query = "query ($nestedAggFields: JSON) {\n    _aggregation {\n      ".concat(

    type, " (nestedAggFields: $nestedAggFields, accessibility: ").concat(accessibility, ") {\n        ").concat(
    nestedHistogramQueryStrForEachField(mainField, numericAggAsText), "\n      }\n    }\n  }");



  var queryBody = { query: query };
  queryBody.variables = { nestedAggFields: nestedAggFields };
  if (gqlFilter) {
    var queryWithFilter = "query ($filter: JSON, $nestedAggFields: JSON) {\n      _aggregation {\n        ".concat(

      type, " (filter: $filter, filterSelf: false, nestedAggFields: $nestedAggFields, accessibility: ").concat(accessibility, ") {\n          ").concat(
      nestedHistogramQueryStrForEachField(mainField, numericAggAsText), "\n        }\n      }\n    }");



    queryBody.variables = { filter: gqlFilter, nestedAggFields: nestedAggFields };
    queryBody.query = queryWithFilter;
  }
  return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(graphqlEndpoint), {
    method: 'POST',
    headers: csrfToken ? _objectSpread(_objectSpread({}, headers), {}, { 'x-csrf-token': csrfToken }) : headers,
    body: JSON.stringify(queryBody)
  }).then(function (response) {return response.json();})["catch"](
    function (err) {
      throw new Error("Error during queryGuppyForSubAgg ".concat(err));
    });
};

var _rawDataQueryStrForEachField = function rawDataQueryStrForEachField(field) {
  var splittedFieldArray = field.split('.');
  var splittedField = splittedFieldArray.shift();
  if (splittedFieldArray.length === 0) {
    return "\n    ".concat(
      splittedField, "\n    ");

  }
  return "\n  ".concat(
    splittedField, " {\n    ").concat(
    _rawDataQueryStrForEachField(splittedFieldArray.join('.')), "\n  }");

};

var queryGuppyForRawDataAndTotalCounts = function queryGuppyForRawDataAndTotalCounts(
path,
type,
fields,
gqlFilter,
sort,
format)




{var offset = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;var size = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 20;var accessibility = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 'all';var csrfToken = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : '';
  var queryLine = 'query {';
  if (gqlFilter || sort || format) {
    queryLine = "query (".concat(sort ? '$sort: JSON,' : '').concat(gqlFilter ? '$filter: JSON,' : '').concat(format ? '$format: Format' : '', ") {");
  }
  var dataTypeLine = "".concat(type, " (accessibility: ").concat(accessibility, ", offset: ").concat(offset, ", first: ").concat(size, ", format: $format) {");
  if (gqlFilter || sort || format) {
    dataTypeLine = "".concat(type, " (accessibility: ").concat(accessibility, ", offset: ").concat(offset, ", first: ").concat(size, ", ").concat(format ? 'format: $format, ' : '', ", ").concat(sort ? 'sort: $sort, ' : '').concat(gqlFilter ? 'filter: $filter,' : '', ") {");
  }
  var typeAggsLine = "".concat(type, " accessibility: ").concat(accessibility, " {");
  if (gqlFilter) {
    typeAggsLine = "".concat(type, " (filter: $filter, accessibility: ").concat(accessibility, ") {");
  }
  var processedFields = fields.map(function (field) {return _rawDataQueryStrForEachField(field);});
  var query = "".concat(queryLine, "\n    ").concat(
    dataTypeLine, "\n      ").concat(
    processedFields.join('\n'), "\n    }\n    _aggregation {\n      ").concat(


    typeAggsLine, "\n        _totalCount\n      }\n    }\n  }");




  var queryBody = { query: query };
  queryBody.variables = {};
  if (format) queryBody.variables.format = format;
  if (gqlFilter) queryBody.variables.filter = gqlFilter;
  if (sort) queryBody.variables.sort = sort;
  return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(graphqlEndpoint), {
    method: 'POST',
    headers: csrfToken ? _objectSpread(_objectSpread({}, headers), {}, { 'x-csrf-token': csrfToken }) : headers,
    body: JSON.stringify(queryBody)
  }).then(function (response) {return response.json();})["catch"](
    function (err) {
      throw new Error("Error during queryGuppyForRawDataAndTotalCounts ".concat(err));
    });
};

var getGQLFilter = function getGQLFilter(filterObj) {
  var facetsList = [];
  Object.keys(filterObj).forEach(function (field) {
    var filterValues = filterObj[field];
    var fieldSplitted = field.split('.');
    var fieldName = fieldSplitted[fieldSplitted.length - 1];
    // The combine mode defaults to OR when not set.
    var combineMode = filterValues.__combineMode ? filterValues.__combineMode : 'OR';

    var hasSelectedValues = filterValues.selectedValues && filterValues.selectedValues.length > 0;
    var hasRangeFilter = typeof filterValues.lowerBound !== 'undefined' && typeof filterValues.upperBound !== 'undefined';

    var facetsPiece = {};
    if (hasSelectedValues && combineMode === 'OR') {
      facetsPiece = {
        IN: _defineProperty({},
        fieldName, filterValues.selectedValues)

      };
    } else if (hasSelectedValues && combineMode === 'AND') {
      facetsPiece = { AND: [] };
      for (var i = 0; i < filterValues.selectedValues.length; i += 1) {
        facetsPiece.AND.push({
          IN: _defineProperty({},
          fieldName, [filterValues.selectedValues[i]])

        });
      }
    } else if (hasRangeFilter) {
      facetsPiece = {
        AND: [
        { '>=': _defineProperty({}, fieldName, filterValues.lowerBound) },
        { '<=': _defineProperty({}, fieldName, filterValues.upperBound) }]

      };
    } else if (filterValues.__combineMode && !hasSelectedValues && !hasRangeFilter) {
      // This filter only has a combine setting so far. We can ignore it.
      return;
    } else if (hasSelectedValues) {
      // filter has selected values but we don't know how to process it
      // eslint-disable-next-line no-console
      console.error(filterValues);
      throw new Error('Invalid filter object');
    }
    if (fieldSplitted.length > 1) {// nested field
      fieldSplitted.pop();
      facetsPiece = {
        nested: _objectSpread({
          path: fieldSplitted.join('.') },
        facetsPiece)

      };
    }
    facetsList.push(facetsPiece);
  });
  var gqlFilter = {
    AND: facetsList
  };
  return gqlFilter;
};

// eslint-disable-next-line max-len
var askGuppyAboutArrayTypes = function askGuppyAboutArrayTypes(path) {return queryGuppyForStatus(path).then(function (res) {return res.indices;});};

var askGuppyForAggregationData = function askGuppyForAggregationData(
path,
type,
regularAggFields,
asTextAggFields,
filter,
accessibility)

{var csrfToken = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';
  var gqlFilter = getGQLFilter(filter);
  return queryGuppyForAggs(path, type, regularAggFields, asTextAggFields, gqlFilter, accessibility, csrfToken);
};

var askGuppyForSubAggregationData = function askGuppyForSubAggregationData(
path,
type,
mainField,
numericAggAsText,
termsNestedFields,
missedNestedFields,
filter,
accessibility,
csrfToken)
{
  var gqlFilter = getGQLFilter(filter);
  return queryGuppyForSubAgg(
    path,
    type,
    mainField,
    termsNestedFields,
    missedNestedFields,
    gqlFilter,
    accessibility,
    numericAggAsText,
    csrfToken
  );
};

var askGuppyForRawData = function askGuppyForRawData(
path,
type,
fields,
filter,
sort,
format)




{var offset = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;var size = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 20;var accessibility = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 'all';var csrfToken = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : '';
  var gqlFilter = getGQLFilter(filter);
  return queryGuppyForRawDataAndTotalCounts(
    path,
    type,
    fields,
    gqlFilter,
    sort,
    format,
    offset,
    size,
    accessibility,
    csrfToken
  );
};

var getAllFieldsFromFilterConfigs = function getAllFieldsFromFilterConfigs(filterTabConfigs) {return filterTabConfigs.reduce(function (acc, cur) {
    Object.keys(cur).
    filter(function (key) {return key === 'fields' || key === 'asTextAggFields';}).
    forEach(function (key) {acc[key] = acc[key].concat(cur[key], []);});
    return acc;
  }, { fields: [], asTextAggFields: [] });};

/**
 * Download all data from guppy using fields, filter, and sort args.
 * If total count is less than 10000 this will use normal graphql endpoint
 * If greater than 10000, use /download endpoint
 */
var downloadDataFromGuppy = function downloadDataFromGuppy(
path,
type,
totalCount, _ref)








{var fields = _ref.fields,filter = _ref.filter,sort = _ref.sort,accessibility = _ref.accessibility,format = _ref.format;var csrfToken = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
  var SCROLL_SIZE = 10000;
  var JSON_FORMAT = format === 'json' || format === undefined;
  if (totalCount > SCROLL_SIZE) {
    var queryBody = { type: type };
    if (fields) queryBody.fields = fields;
    if (filter) queryBody.filter = getGQLFilter(filter);
    if (sort) queryBody.sort = sort;
    if (typeof accessibility !== 'undefined') queryBody.accessibility = accessibility;
    return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(downloadEndpoint), {
      method: 'POST',
      headers: csrfToken ? _objectSpread(_objectSpread({}, headers), {}, { 'x-csrf-token': csrfToken }) : headers,
      body: JSON.stringify(queryBody)
    }).
    then(function (r) {return r.json();}).
    then(function (res) {return JSON_FORMAT ? res : (0,_conversion__WEBPACK_IMPORTED_MODULE_1__.jsonToFormat)(res, format);});
  }
  return askGuppyForRawData(path, type, fields, filter, sort, format, 0, totalCount, accessibility, csrfToken).
  then(function (res) {
    if (res && res.data && res.data[type]) {
      return JSON_FORMAT ? res.data[type] : (0,_conversion__WEBPACK_IMPORTED_MODULE_1__.jsonToFormat)(res.data[type], format);
    }
    throw Error('Error downloading data from Guppy');
  });
};

var askGuppyForTotalCounts = function askGuppyForTotalCounts(
path,
type,
filter)


{var accessibility = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'all';var csrfToken = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
  var gqlFilter = getGQLFilter(filter);
  var queryLine = "query ".concat(gqlFilter ? '($filter: JSON)' : '', "{");
  var typeAggsLine = "".concat(type, " ").concat(gqlFilter ? '(filter: $filter, ' : '(', " accessibility: ").concat(accessibility, ") {");
  var query = "".concat(queryLine, "\n    _aggregation {\n      ").concat(

    typeAggsLine, "\n        _totalCount\n      }\n    }\n  }");




  var queryBody = { query: query };
  queryBody.variables = {};
  if (gqlFilter) queryBody.variables.filter = gqlFilter;

  return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(graphqlEndpoint), {
    method: 'POST',
    headers: csrfToken ? _objectSpread(_objectSpread({}, headers), {}, { 'x-csrf-token': csrfToken }) : headers,
    body: JSON.stringify(queryBody)
  }).then(function (response) {return response.json();}).
  then(function (response) {
    if (response.errors) {
      throw new Error("Error during download ".concat(response.errors));
    }
    return response.data._aggregation[type]._totalCount;
  })["catch"](
    function (err) {
      throw new Error("Error during download ".concat(err));
    });
};

var getAllFieldsFromGuppy = function getAllFieldsFromGuppy(
path,
type)

{var csrfToken = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var query = "{\n    _mapping {\n      ".concat(

    type, "\n    }\n  }");


  var queryBody = { query: query };
  return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(graphqlEndpoint), {
    method: 'POST',
    headers: csrfToken ? _objectSpread(_objectSpread({}, headers), {}, { 'x-csrf-token': csrfToken }) : headers,
    body: JSON.stringify(queryBody)
  }).then(function (response) {return response.json();}).
  then(function (response) {return response.data._mapping[type];})["catch"](
    function (err) {
      console.log(err);
      throw new Error("Error when getting fields from guppy: ".concat(err));
    });
};

var getAccessibleResources = /*#__PURE__*/function () {var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(
  path,
  type,
  accessibleFieldCheckList) {var csrfToken,accessiblePromiseList,unaccessiblePromiseList,accessibleFieldObject,accessibleFieldResult,unaccessibleFieldObject,unaccessibleFieldResult,_args = arguments;return _regeneratorRuntime().wrap(function _callee$(_context) {while (1) switch (_context.prev = _context.next) {case 0:
          csrfToken = _args.length > 3 && _args[3] !== undefined ? _args[3] : '';

          accessiblePromiseList = [];
          unaccessiblePromiseList = [];
          accessibleFieldCheckList.forEach(function (accessibleField) {
            var fetchRequestPromise = function fetchRequestPromise(accessible) {
              var query = "query {\n        _aggregation {\n          ".concat(

                type, " (accessibility: ").concat(accessible ? 'accessible' : 'unaccessible', ") {\n            ").concat(
                accessibleField, " {\n              histogram {\n                key\n                count\n              }\n            }\n          }\n        }\n      }");








              var queryBody = { query: query };

              return isomorphic_fetch__WEBPACK_IMPORTED_MODULE_0___default()("".concat(path).concat(graphqlEndpoint), {
                method: 'POST',
                headers: csrfToken ? _objectSpread(_objectSpread({}, headers), {}, { 'x-csrf-token': csrfToken }) : headers,
                body: JSON.stringify(queryBody)
              }).
              then(function (response) {return response.json();}).
              then(
                function (response) {return {
                    field: accessibleField,
                    list: response.data._aggregation[type][accessibleField].
                    histogram.map(function (item) {return item.key;})
                  };}
              )["catch"](
                function (err) {
                  throw new Error("Error when getting fields from guppy: ".concat(err));
                });
            };
            accessiblePromiseList.push(fetchRequestPromise(true));
            unaccessiblePromiseList.push(fetchRequestPromise(false));
          });

          accessibleFieldObject = {};_context.next = 7;return (
            Promise.all(accessiblePromiseList));case 7:accessibleFieldResult = _context.sent;
          accessibleFieldResult.forEach(function (res) {
            accessibleFieldObject[res.field] = res.list;
          });
          unaccessibleFieldObject = {};_context.next = 12;return (
            Promise.all(unaccessiblePromiseList));case 12:unaccessibleFieldResult = _context.sent;
          unaccessibleFieldResult.forEach(function (res) {
            unaccessibleFieldObject[res.field] = res.list;
          });return _context.abrupt("return",
          { accessibleFieldObject: accessibleFieldObject, unaccessibleFieldObject: unaccessibleFieldObject });case 15:case "end":return _context.stop();}}, _callee);}));return function getAccessibleResources(_x, _x2, _x3) {return _ref2.apply(this, arguments);};}();

/***/ })

});
//# sourceMappingURL=connectedFilter-stories.e271047e9028bd5e8839.hot-update.js.map