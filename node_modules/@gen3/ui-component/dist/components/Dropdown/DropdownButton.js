"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
require("./DropdownButton.css");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var DropdownButton = /*#__PURE__*/function (_Component) {
  _inherits(DropdownButton, _Component);
  var _super = _createSuper(DropdownButton);
  function DropdownButton() {
    _classCallCheck(this, DropdownButton);
    return _super.apply(this, arguments);
  }
  _createClass(DropdownButton, [{
    key: "handleClick",
    value: function handleClick() {
      if (this.props.disabled) {
        return;
      }
      this.props.onClick();
      this.props.afterClick();
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;
      var wrapperDisableStatusClassName = this.props.disabled ? 'g3-dropdown-button__wrapper--disabled' : '';
      var buttonTypeClassName = "g3-dropdown-button__button--".concat(this.props.buttonType);
      var buttonIsSplitClassName = this.props.split ? 'g3-dropdown-button__button--with-split-trigger' : 'g3-dropdown-button__button--without-split-trigger';
      var menuTriggerButtonTypeClassName = "g3-dropdown-button__menu-trigger--".concat(this.props.buttonType);
      return /*#__PURE__*/_react["default"].createElement("div", {
        ref: this.props.menuTriggerElementRef,
        className: "g3-dropdown-button__wrapper ".concat(wrapperDisableStatusClassName, " ").concat(this.props.className || '')
      }, /*#__PURE__*/_react["default"].createElement("button", {
        type: "button",
        className: "g3-dropdown-button__button ".concat(buttonIsSplitClassName, " ").concat(buttonTypeClassName),
        onClick: this.props.split ? function (e) {
          return _this.handleClick(e);
        } : this.props.handleTriggerMenu,
        label: this.props.label
      }, this.props.children, this.props.split || /*#__PURE__*/_react["default"].createElement("i", {
        className: "".concat(this.props.rightIcon === '' ? 'g3-dropdown-button__icon' : "g3-icon g3-icon--".concat(this.props.rightIcon))
      })), this.props.split && /*#__PURE__*/_react["default"].createElement("button", {
        type: "button",
        className: "g3-dropdown-button__menu-trigger ".concat(menuTriggerButtonTypeClassName),
        onClick: this.props.handleTriggerMenu
      }, /*#__PURE__*/_react["default"].createElement("i", {
        className: "g3-dropdown-button__icon ".concat(this.props.menuOpen ? 'g3-dropdown-button__icon--menu-opened' : '')
      })));
    }
  }]);
  return DropdownButton;
}(_react.Component);
DropdownButton.propTypes = {
  split: _propTypes["default"].bool,
  className: _propTypes["default"].string,
  label: _propTypes["default"].string,
  onClick: _propTypes["default"].func,
  handleTriggerMenu: _propTypes["default"].func,
  menuOpen: _propTypes["default"].bool,
  afterClick: _propTypes["default"].func,
  menuTriggerElementRef: _propTypes["default"].object,
  buttonType: _propTypes["default"].oneOf(['primary', 'secondary']),
  rightIcon: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].node]).isRequired
};
DropdownButton.defaultProps = {
  split: false,
  className: '',
  label: 'Dropdown Button',
  onClick: function onClick() {},
  buttonType: 'primary',
  rightIcon: '',
  // override by Dropdown component:
  handleTriggerMenu: function handleTriggerMenu() {},
  menuOpen: false,
  afterClick: function afterClick() {},
  menuTriggerElementRef: {},
  disabled: false
};
var _default = DropdownButton;
exports["default"] = _default;