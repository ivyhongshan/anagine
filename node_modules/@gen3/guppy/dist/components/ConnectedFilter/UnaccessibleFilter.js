"use strict";function _typeof(o) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;}, _typeof(o);}Object.defineProperty(exports, "__esModule", { value: true });exports["default"] = void 0;var _ = _interopRequireDefault(require("."));
var _const = require("../Utils/const");function _interopRequireDefault(e) {return e && e.__esModule ? e : { "default": e };}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(e, r, t) {return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e;}function _defineProperties(e, r) {for (var t = 0; t < r.length; t++) {var o = r[t];o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);}}function _createClass(e, r, t) {return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : i + "";}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}function _classCallCheck(a, n) {if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");}function _callSuper(t, o, e) {return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));}function _possibleConstructorReturn(t, e) {if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t);}function _assertThisInitialized(e) {if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e;}function _isNativeReflectConstruct() {try {var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));} catch (t) {}return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {return !!t;})();}function _getPrototypeOf(t) {return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {return t.__proto__ || Object.getPrototypeOf(t);}, _getPrototypeOf(t);}function _inherits(t, e) {if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e);}function _setPrototypeOf(t, e) {return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {return t.__proto__ = e, t;}, _setPrototypeOf(t, e);}var

UnaccessibleFilter = /*#__PURE__*/function (_ConnectedFilter) {
  function UnaccessibleFilter(props) {var _this;_classCallCheck(this, UnaccessibleFilter);
    _this = _callSuper(this, UnaccessibleFilter, [props]);
    _this.state = _objectSpread(_objectSpread({},
    _this.state), {}, {
      accessibility: _const.ENUM_ACCESSIBILITY.UNACCESSIBLE });return _this;

  }_inherits(UnaccessibleFilter, _ConnectedFilter);return _createClass(UnaccessibleFilter);}(_["default"]);var _default = exports["default"] =


UnaccessibleFilter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfY29uc3QiLCJlIiwiX19lc01vZHVsZSIsIm93bktleXMiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl90b1Byb3BlcnR5S2V5IiwidmFsdWUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwicHJvdG90eXBlIiwiaSIsIl90b1ByaW1pdGl2ZSIsIl90eXBlb2YiLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJfY2xhc3NDYWxsQ2hlY2siLCJhIiwibiIsIl9jYWxsU3VwZXIiLCJfZ2V0UHJvdG90eXBlT2YiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiY29uc3RydWN0b3IiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiUmVmZXJlbmNlRXJyb3IiLCJCb29sZWFuIiwidmFsdWVPZiIsInNldFByb3RvdHlwZU9mIiwiZ2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwiY3JlYXRlIiwiX3NldFByb3RvdHlwZU9mIiwiVW5hY2Nlc3NpYmxlRmlsdGVyIiwiX0Nvbm5lY3RlZEZpbHRlciIsInByb3BzIiwiX3RoaXMiLCJzdGF0ZSIsImFjY2Vzc2liaWxpdHkiLCJFTlVNX0FDQ0VTU0lCSUxJVFkiLCJVTkFDQ0VTU0lCTEUiLCJDb25uZWN0ZWRGaWx0ZXIiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Db25uZWN0ZWRGaWx0ZXIvVW5hY2Nlc3NpYmxlRmlsdGVyLmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29ubmVjdGVkRmlsdGVyIGZyb20gJy4nO1xuaW1wb3J0IHsgRU5VTV9BQ0NFU1NJQklMSVRZIH0gZnJvbSAnLi4vVXRpbHMvY29uc3QnO1xuXG5jbGFzcyBVbmFjY2Vzc2libGVGaWx0ZXIgZXh0ZW5kcyBDb25uZWN0ZWRGaWx0ZXIge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgLi4udGhpcy5zdGF0ZSxcbiAgICAgIGFjY2Vzc2liaWxpdHk6IEVOVU1fQUNDRVNTSUJJTElUWS5VTkFDQ0VTU0lCTEUsXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBVbmFjY2Vzc2libGVGaWx0ZXI7XG4iXSwibWFwcGluZ3MiOiI4WkFBQSxJQUFBQSxDQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFELE9BQUEsbUJBQW9ELFNBQUFELHVCQUFBRyxDQUFBLFVBQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUEsZ0JBQUFBLENBQUEsYUFBQUUsUUFBQUYsQ0FBQSxFQUFBRyxDQUFBLE9BQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxJQUFBLENBQUFOLENBQUEsTUFBQUssTUFBQSxDQUFBRSxxQkFBQSxPQUFBQyxDQUFBLEdBQUFILE1BQUEsQ0FBQUUscUJBQUEsQ0FBQVAsQ0FBQSxFQUFBRyxDQUFBLEtBQUFLLENBQUEsR0FBQUEsQ0FBQSxDQUFBQyxNQUFBLFdBQUFOLENBQUEsVUFBQUUsTUFBQSxDQUFB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